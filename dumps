function millerRabin(n) {
  let d = n - 1;
  console.log(`d: ${d}`);

  let base = 2;
  let exponent = 1;
  let remainder;

  while ((d % (2 ** exponent)) === 0) {
    exponent++;
    console.log(`Exponent: ${exponent}`);
    console.log(`d / (2 ^ ${exponent - 1}): ${d / (2 ** (exponent - 1))}`);
  }

  let x = base ** (d / (2 ** (exponent - 1)));
  console.log(`x: ${x}`);

  if (x === 1 || x === n - 1) {
    console.log("Probably prime");
  } else {
    let isPrime = false;
    for (let i = 1; i < exponent - 1; i++) {
      x = x ** 2;
      console.log(`x: ${x}`);
      if (x === n - 1) {
        isPrime = true;
        break;
      }
    }
    console.log(isPrime ? "Probably prime" : "Composite");
  }
}

millerRabin(50);








Below is my ealier prompt with my initail code

how to i make this code console.log what is in the while statement and also why is not working: function Miller_Rabin ( ChoosenNumber) {


    let DoChoosen = ChoosenNumber - 1
    
    console.log(DoChoosen)
    
    // Am using the base as two because its the default while computing Miller-Rabin primality
    
    let TheBase = 2;
    
    // The exponent is first set to one because its the starting point
    
    
    let TheExponent = 1
    
    // let TheBaseRemainder
    
    let RaiseToPower = Math.pow( TheBase , TheExponent);
    
    let CheckIfRemainder = DoChoosen % RaiseToPower;
    
    let NumberOfUsedBase = 0
    
    
    
    while( CheckIfRemainder == 0){
    
    
    console.log( NumberOfUsedBase++)
    
    console.log( DoChoosen / RaiseToPower)
    
    console.log(TheExponent++)
    
    
    CheckIfRemainder = DoChoosen % RaiseToPower
    
    
    }
    
    
    
    }
    
    
    Miller_Rabin ( 50);









    let tryIt = 10;
let tryIt2 = 6;

while (tryIt + tryIt2 < 100) {
  console.log("Until it's up to 100");
  let temp = tryIt;
  tryIt = tryIt + tryIt2;
  tryIt2 = temp;
}



/* Global Styles */
body {
  font-family: Arial, sans-serif;
  background-color: #f7f7f7;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.container {
  width: 80%;
  max-width: 1000px;
  background-color: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

header {
  text-align: center;
}

header h1 {
  color: #333;
}

header p {
  color: #555;
  font-size: 16px;
}

/* Styling for party sections */
.party-section {
  display: flex;
  justify-content: space-between;
  margin-top: 30px;
}

.party-container {
  width: 45%;
  padding: 20px;
  background-color: #e4e4e4;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.party-container h2 {
  text-align: center;
  color: #333;
  margin-bottom: 20px;
}

input {
  width: 100%;
  padding: 12px;
  margin: 10px 0;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 6px;
}

button {
  width: 100%;
  padding: 14px;
  background-color: #007BFF;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

/* Action container */
.action-container {
  text-align: center;
  margin-top: 20px;
}

.action-container button {
  width: auto;
  margin: 10px;
  padding: 12px 25px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  cursor: pointer;
}

.action-container button:hover {
  background-color: #218838;
}







// another style

/* Global Styles */
body {
  font-family: Arial, sans-serif;
  background-color: #f7f7f7;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  animation: fadeIn 1s ease-in-out; /* Fade-in animation for the body */
}

.container {
  width: 80%;
  max-width: 1000px;
  background-color: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  animation: slideUp 1.5s ease-out; /* Slide-up animation for the container */
}

header {
  text-align: center;
}

header h1 {
  color: #333;
}

header p {
  color: #555;
  font-size: 16px;
}

/* Animating party sections with slide-in effect */
.party-section {
  display: flex;
  justify-content: space-between;
  margin-top: 30px;
  opacity: 0; /* Start invisible */
  animation: fadeInSlide 1s ease-out forwards; /* Fade-in and slide-up */
}

.party-container {
  width: 45%;
  padding: 20px;
  background-color: #e4e4e4;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transform: translateX(-50%); /* Start from left */
  animation: slideInLeft 0.6s ease-out forwards; /* Slide-in effect from left */
}

.party-container:nth-child(2) {
  animation: slideInRight 0.6s ease-out forwards; /* Slide-in effect from right for Obi */
}

.party-container h2 {
  text-align: center;
  color: #333;
  margin-bottom: 20px;
}

input {
  width: 100%;
  padding: 12px;
  margin: 10px 0;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 6px;
  transition: all 0.3s ease; /* Smooth transition for inputs */
}

input:focus {
  border-color: #007BFF;
  box-shadow: 0 0 8px rgba(0, 123, 255, 0.6); /* Focus effect */
}

button {
  width: 100%;
  padding: 14px;
  background-color: #007BFF;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  cursor: pointer;
  transition: transform 0.2s ease, background-color 0.3s ease; /* Hover animation */
}

button:hover {
  transform: scale(1.05); /* Slight scale-up effect */
  background-color: #0056b3; /* Darker blue on hover */
}

/* Action container */
.action-container {
  text-align: center;
  margin-top: 20px;
}

.action-container button {
  width: auto;
  margin: 10px;
  padding: 12px 25px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  cursor: pointer;
  transition: transform 0.2s ease, background-color 0.3s ease; /* Hover animation */
}

.action-container button:hover {
  transform: scale(1.05); /* Slight scale-up effect */
  background-color: #218838; /* Darker green on hover */
}

/* Animations */
@keyframes fadeIn {
  0% {
      opacity: 0;
  }
  100% {
      opacity: 1;
  }
}

@keyframes slideUp {
  0% {
      transform: translateY(30px);
  }
  100% {
      transform: translateY(0);
  }
}

@keyframes fadeInSlide {
  0% {
      opacity: 0;
      transform: translateY(20px);
  }
  100% {
      opacity: 1;
      transform: translateY(0);
  }
}

@keyframes slideInLeft {
  0% {
      transform: translateX(-50%);
  }
  100% {
      transform: translateX(0);
  }
}

@keyframes slideInRight {
  0% {
      transform: translateX(50%);
  }
  100% {
      transform: translateX(0);
  }
}


